// <auto-generated />
using System;
using Cef.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cef.API.Data.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20181221014413_ProductCartOrder")]
    partial class ProductCartOrder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cef.API.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Cef.API.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Cef.API.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PictureFileName");

                    b.Property<string>("PictureUri");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Cef.API.Relationships.CartProduct", b =>
                {
                    b.Property<Guid>("Model1Id");

                    b.Property<Guid>("Model2Id");

                    b.Property<string>("Model1Name")
                        .IsRequired();

                    b.Property<string>("Model2Name")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Model1Id", "Model2Id");

                    b.HasIndex("Model2Id");

                    b.ToTable("CartProducts");
                });

            modelBuilder.Entity("Cef.API.Relationships.OrderProduct", b =>
                {
                    b.Property<Guid>("Model1Id");

                    b.Property<Guid>("Model2Id");

                    b.Property<string>("Model1Name")
                        .IsRequired();

                    b.Property<string>("Model2Name")
                        .IsRequired();

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Model1Id", "Model2Id");

                    b.HasIndex("Model2Id");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("Cef.API.Relationships.CartProduct", b =>
                {
                    b.HasOne("Cef.API.Models.Cart", "Model1")
                        .WithMany("CartProducts")
                        .HasForeignKey("Model1Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cef.API.Models.Product", "Model2")
                        .WithMany("CartProducts")
                        .HasForeignKey("Model2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cef.API.Relationships.OrderProduct", b =>
                {
                    b.HasOne("Cef.API.Models.Order", "Model1")
                        .WithMany("OrderProducts")
                        .HasForeignKey("Model1Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cef.API.Models.Product", "Model2")
                        .WithMany("OrderProducts")
                        .HasForeignKey("Model2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
